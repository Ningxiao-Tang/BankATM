Design Document
Date: 5/6/2020
Team #9

Elyse Kaczmarek
BU ID: U65134290

Eunice Choi
BU ID: U75265203

Ningxiao Tang
BU ID: U20262071


Backend/OOD files

We didn't have a UML, instead we had a shared google doc where we had all the classes organized
in a way where we can see their relationship to one another (it looked very similar to the readME). 
We tried to make our app follow OOD as close as possible, for example for every aspect of the app
we have made a class for it that will inherit from the superclass. The main superclasses were 
AccountType, User, Transaction. We decided to not have a overclass Account for both AccountType and 
User because there isn't much in common between the two, and so we wanted to separate them. 
Transaction was its separate class because just like in Quest where there are Item, here Transaction 
is the "Item" of Bank ATM. For the Currency class, instead of using separate classes for the 
different types of currencies, we decided to go with enum with the file CurrencyType. 
This was because it had a simpler implementation with the same functionality.

Database


Customer view consists of a left panel of option buttons, and a right panel where details of their accounts are displayed. For deposit, withdraw, and loan action, customer first select an account from the account table and choose one of the actions, then a dialog window is created to handle the event. For transfer, buy stock, sell stock, and history options, a new window is created to handle the event. 
For stock activity, a separate stock list view is created to display stock information from database, so it is reusable for both customer's and manager's stock view.
Similarly, transaction view would retrieve transaction history from database and could be reused for manager's daily report view and customer's transaction history view. Due to time constrains, the transaction and stock list view are not fully developed.

